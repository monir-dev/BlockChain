using System;
using NBitcoin;

namespace _01
{
    class Program
    {
        static void Main(string[] args)
        {
            // Generate a Public Key
            var publicKey = GeneratePublicKey();

            GenerateBitCoinAddressFromPublicKey(publicKey);

            GetNetworkFromPublicKey(publicKey);

            GenerateScriptPubKey();



            //Console.WriteLine("Hello World! " + new Key().GetWif(Network.Main));
        }

        

        // Generate a Public Key From Random Private Key
        private static PubKey GeneratePublicKey()
        {
            Console.WriteLine("\nPubKey");

            Key privateKey = new Key(); // generate a random private key
            PubKey publicKey = privateKey.PubKey;
            Console.WriteLine(publicKey); // 0251036303164f6c458e9f7abecb4e55e5ce9ec2b2f1d06d633c9653a07976560c
            return publicKey;
        }

        // Generate BitCoin Address from public key
        private static void GenerateBitCoinAddressFromPublicKey(PubKey publicKey)
        {
            Console.WriteLine("\nBitCoinAddress");

            Console.WriteLine(publicKey.GetAddress(Network.Main)); // 1PUYsjwfNmX64wS368ZR5FMouTtUmvtmTY
            Console.WriteLine(publicKey.GetAddress(Network.TestNet)); // n3zWAo2eBnxLr3ueohXnuAa8mTVBhxmPhq
        }

        // Get Network address from public key
        private static void GetNetworkFromPublicKey(PubKey publicKey)
        {
            Console.WriteLine("\nGetNetwork");

            // Get address from public key
            //Fact: A public key hash is generated by using a SHA256 hash on the public key, then a RIPEMD160 hash on the result, using Big Endian notation. The function could look like this: RIPEMD160(SHA256(pubkey))
            var publicKeyHash = publicKey.Hash;
            Console.WriteLine(publicKeyHash); // f6889b21b5540353a29ed18c45ea0031280c42cf
            var mainNetAddress = publicKeyHash.GetAddress(Network.Main);
            var testNetAddress = publicKeyHash.GetAddress(Network.TestNet);
            Console.WriteLine(mainNetAddress);
            Console.WriteLine(testNetAddress);
        }

        // Generate ScriptPubKey
        private static void GenerateScriptPubKey()
        {
            Console.WriteLine("\nScriptPubKey");

            var publicKeyHash = new KeyId("14836dbe7f38c5ac3d49e8d790af808a4ee9edcf");
            var testNetAddress = publicKeyHash.GetAddress(Network.TestNet);
            var mainNetAddress = publicKeyHash.GetAddress(Network.Main);

            Console.WriteLine(mainNetAddress
                .ScriptPubKey); // OP_DUP OP_HASH160 14836dbe7f38c5ac3d49e8d790af808a4ee9edcf OP_EQUALVERIFY OP_CHECKSIG
            Console.WriteLine(testNetAddress
                .ScriptPubKey); // OP_DUP OP_HASH160 14836dbe7f38c5ac3d49e8d790af808a4ee9edcf OP_EQUALVERIFY OP_CHECKSIG
        }
    }
}
